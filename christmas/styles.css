body {
  margin: 0;
}

.happy-holidays {
  margin: 0;
  padding-bottom: 0.5rem;
  font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",
    "Lucida Sans Unicode", Geneva, Verdana, sans-serif;
}

.tree-container {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  margin-top: 2rem;
}

.tree-topper {
  margin-bottom: -4rem;
  height: 10rem;
  width: 10rem;
  clip-path: polygon(
    50% 0%,
    61% 35%,
    98% 35%,
    68% 57%,
    79% 91%,
    50% 70%,
    21% 91%,
    32% 57%,
    2% 35%,
    39% 35%
  );
  background-color: gold;
}

.worklet-canvas {
  z-index: -1;
  width: 75rem;
  height: 75rem;
  margin-left: -4.4rem;
  background-color: rgb(129, 224, 129);
  background-image: paint(generativePattern);
  clip-path: polygon(
    53% 2%,
    28% 24%,
    42% 20%,
    21% 48%,
    38% 43%,
    11% 76%,
    37% 71%,
    30% 79%,
    54% 75%,
    76% 80%,
    69% 71%,
    92% 76%,
    67% 43%,
    83% 48%,
    63% 20%,
    77% 25%
  );
}

.tree-trunk {
  z-index: -2;
  height: 12rem;
  width: 7.5rem;
  margin-top: -20rem;
  clip-path: polygon(20% 0%, 80% 0%, 100% 100%, 0% 100%);
  background-color: brown;
}

.holiday-button {
  margin-top: 2rem;
}

/* Using the CSS Properties and Values API */
/* https://developer.mozilla.org/en-US/docs/Web/API/CSS_Properties_and_Values_API */
@property --pattern-seed {
  syntax: "<number>";
  initial-value: 100;
  inherits: true;
}

@property --pattern-colors {
  syntax: "<color>#";
  /* allows us to pass an array of comma-separated colors to the worklet in any valid CSS color format */
  initial-value: red, orange, yellow, blue, green;
  inherits: true;
}

@property --pattern-speck-count {
  syntax: "<number>";
  initial-value: 100;
  inherits: true;
}

@property --pattern-speck-min-size {
  syntax: "<number>";
  initial-value: 0;
  inherits: true;
}

@property --pattern-speck-max-size {
  syntax: "<number>";
  initial-value: 5;
  inherits: true;
}
